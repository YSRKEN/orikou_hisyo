/* 任務一覧機能に関するイベント処理 */

//*任務一覧機能の画面を出す
*show_task_window
	gsel kTaskWindowID, 2
	show_window(kTaskWindowID) = TRUE
return

*redraw_task_window
	// 任務一覧を確認して、遂行中になっているものの位置を抽出する
	dim task_list_index, kMaxTasks
	dim task_list_column, kMaxTasks
	count = 0
	for n, 0, scene_list_size
		if(scene_list_category(n) != "任務画面") :_continue
		if(instr(scene_list_name(n),,"ページ目") == -1) :_continue
		index = show_scene_list_index(n)
		if(index < 0) :_continue
		gsel kSceneBufferID + index
		if(scene_list_name(n) == "１ページ目"){
			// 大淀チェッカー
			flg = FALSE
			for k, 708, 774
				if(NearColor(k, 380, 246, 239, 228) != TRUE){
					flg = TRUE
					_break
				}
			next
			if(flg) :return
		}
		// 「任務がありません」表示ならカウントを打ち切る
		if (NearColor(392, 258, 137, 131, 125)){
			if(NearColor(346, 259, 137, 131, 125)){
				count = 0
				_break
			}
		}
		for k, 0, 5
			// 「進行中」ボタンが付いている場合にのみ反応する
			if (NearColor(task_pos_x + 581, task_pos_y(k) + 38, 255, 132, 49) != TRUE) :_continue
			task_list_index(count) = index
			task_list_column(count) = k
			count++
			if(count >= kMaxTasks) :_break
		next
		if(count >= kMaxTasks) :_break
	next
	// 描画する
	gsel kTaskWindowID
	redraw 0
		// 画面消去
		color 255, 255, 255 :boxf
		// 再描画
		for y, 0, count
			// 任務の種類 kTaskColumnPX1,kTaskColumnPY1 kTaskColumnWX1×kTaskColumnWY
			pos 0, y * kTaskColumnWY
			gcopy kSceneBufferID + task_list_index(y), task_pos_x + kTaskColumnPX1, task_pos_y(task_list_column(y)) + kTaskColumnPY1, kTaskColumnWX1, kTaskColumnWY
			// 任務名 kTaskColumnPX2,kTaskColumnPY2 kTaskColumnWX2×kTaskColumnWY
			pos kTaskColumnWX1, y * kTaskColumnWY
			gcopy kSceneBufferID + task_list_index(y), task_pos_x + kTaskColumnPX2, task_pos_y(task_list_column(y)) + kTaskColumnPY2, kTaskColumnWX2, kTaskColumnWY
			// 任務達成度 kTaskColumnPX3,kTaskColumnPY3 kTaskColumnWX3×kTaskColumnWY
			pos kTaskColumnWX1 + kTaskColumnWX2, y * kTaskColumnWY
			gcopy kSceneBufferID + task_list_index(y), task_pos_x + kTaskColumnPX3, task_pos_y(task_list_column(y)) + kTaskColumnPY3, kTaskColumnWX3, kTaskColumnWY
		next
	redraw 1
	// あ号・い号・ろ号がチェックされているかを確認する
	gsel kTaskWindowID
	check_ago_flg = FALSE
	check_rogo_flg = FALSE
	check_igo_flg = FALSE
	for y, 0, count
		temp_task_str = ""
		for k, 0, 60
			pget kTaskColumnWX1 + k, y * kTaskColumnWY + 11
			if(ginfo_r < 210){
				temp_task_str += "1"
			}else{
				temp_task_str += "0"
			}
		next
		//logmes "" + (y) + " |> " + temp_task_str
		if(compareBit(temp_task_str, "001101101101100000110000000001010000110000011111110111100000") < 2){
			check_ago_flg = TRUE
		}else: if(compareBit(temp_task_str, "000111000011000000110000000001010000110000011111110111100000") < 2){
			check_rogo_flg = TRUE
		}else :if(compareBit(temp_task_str, "001100000000110000110000000001011000110000011111110111100000") < 2){
			check_igo_flg = TRUE
		}
	next
	//logmes "" + check_ago_flg + " " + check_rogo_flg + " " + check_igo_flg
return
